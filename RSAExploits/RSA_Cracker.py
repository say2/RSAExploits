sage_present = 1
try:
    from sage.all_cmdline import *    
except ImportError:
    sage_present = 0

exploit_classes = []

def init():
	global exploit_classes 
	global sage_present

	exploit_classes = []
	### Attacks that do not require sage
	from RSAExploits.exploits.common_modulus import Common_Modulus
	exploit_classes.append(Common_Modulus())
    
	from RSAExploits.exploits.wiener import wiener
	exploit_classes.append(wiener())

	from RSAExploits.exploits.hastad import hastad
	exploit_classes.append(hastad())
	
	#from RSAExploits.exploits.fermat import fermat
	#exploit_classes.append(fermat())

	### Attacks that require sage
	if sage_present:
		from RSAExploits.exploits.common_factor import Common_Factor
		exploit_classes.append(Common_Factor())
		#from RSAExploits.exploits.boneh_durfee import Boneh_Durfee
		#exploit_classes.append(Boneh_Durfee())

def attack(ciphertexts):
    for exploit in exploit_classes:
        exploit.run(ciphertexts)

