
from RSAExploits.exploits.Common_Modulus import Common_Modulus
from RSAExploits.exploits.Wiener import Wiener
from RSAExploits.exploits.Boneh_Durfee import Boneh_Durfee
from RSAExploits.exploits.Hastad import Hastad
from RSAExploits.exploits.Fermat import Fermat
from RSAExploits.exploits.Common_Factor import Common_Factor
from RSAExploits.exploits.Qsieve import Qsieve
from RSAExploits.exploits.Ecm import Ecm
from RSAExploits.exploits.Franklin_Reiter import Franklin_Reiter

exploit_classes = []

def init():
	global exploit_classes 

	exploit_classes = []
	exploit_classes.append(Franklin_Reiter())
	exploit_classes.append(Common_Modulus())
	exploit_classes.append(Common_Factor())
	exploit_classes.append(Wiener())
	exploit_classes.append(Boneh_Durfee())
	exploit_classes.append(Hastad())
	exploit_classes.append(Fermat())
	exploit_classes.append(Qsieve())
#	exploit_classes.append(Ecm())

def attack(rsadata_list, break_on_success = True,  info_dict = None):
	success = False
	for exploit in exploit_classes:
		if exploit.run(rsadata_list, info_dict):
			success = True
		if success and break_on_success:
			return success

