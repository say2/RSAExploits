#!/usr/bin/env python

from sympy import integer_nthroot
from Exploit import Exploit
from RSAExploits.util import compute_private_RSA_exp

class fermat(Exploit):
	def run(self, rsadata_list):
		print ("Fermat: Running Attack...")
		success = False
		for rsadata in rsadata_list:
			roots = self.fermat_factor(rsadata.getN())
			
			if roots != None:
				rsadata.setD(compute_private_RSA_exp(rsadata.getE(), roots))
				success = True
		
		if success:		
			print("Fermat: Success, roots found, assigned in rsadata.")
			return True							
		else: 			
			print("Fermat: Failure, roots not found.")
			return False
	
	
	@staticmethod	
	def fermat_factor(n):
		limit=10000000
		a, exact = integer_nthroot(n, 2)
		max = a + limit
		while a < max:
			b2 = a*a - n
			if b2 >= 0:
				b, exact = integer_nthroot(b2, 2)
				if b != None:
					if b*b == b2:
						break
			a += 1
		if a < max:
			p = a+b
			q = a-b
			return p, q
		else:
			return None

        

