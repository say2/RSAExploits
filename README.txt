===========
RSAExploits
===========


Introduction
============
The library covers efficient RSA vulnerabilities exploit library for CTF challenges related to RSA cryptosystems. There are many attacks possible from basic gcd calculation to advance attacks, e.g. Wiener Attack, Hastad's Broadcast Attack, etc. The vulnerability in CTF challenge can be identified and the particular attack can be executed to retrieve prime numbers and finally decrypt the secret. 
Often cryptography challenges require scripting in python to exploit various vulnerabilities. During the CTF competition, the primary goal is to produce a working code, while efficient and correctness of code are of less concern. Usually, solving an RSA cryptography challenge requires coding a simple RSA implementation or using existing libraries. The coding effort and verification effort significantly reduce, if a common framework for RSA implementation and exploits are provided. The framework can be used directly for discovering/checking, and executing the exploit using inbuilt classes and functions.
Also, sometimes RSA elements in challenges are vulnerable to more more than one RSA exploit, which are not known. Applying various exploits on a set of RSA keys might lead to fast retrieval of secret.


Implementation
==============
The exploit library contains various exploits and uses RSA wrappers to pass data to included exploits. Top level RSA wrapper class is called rsaData, which includes RSA key object and text data object. RSA key object is generated from rsaObj function. Text data object is created by txt class, which include plain text, cipher text, and ID. Both these objects are encompassed in rsaData class, to provide a streamline e exploitation process across all attacks.    
Other operations pertinent to RSA cryptosystems must be readily available, such as calculating multiplicative inverse, Chinese Remainder Theorem, etc.

Libraries Required
------------------  
* PyCrypto: The library contains RSA implementation to easily retrieve RSA key elements.
* Sage and Sympy: Libraries provide many complex mathematical functions supporting high
precision result.


